ID: 5
Execution stack: 
(ref(int) v ; (New(v, 20) ; (ref(ref(int)) a ; (New(a, v) ; (Print(v) ; Print(a))))))
Symbol table: 
Output list: 
File table:
Heap table:

ID: 5
Execution stack: 
ref(int) v
(New(v, 20) ; (ref(ref(int)) a ; (New(a, v) ; (Print(v) ; Print(a)))))
Symbol table: 
Output list: 
File table:
Heap table:

ID: 5
Execution stack: 
ref(int) v
(New(v, 20) ; (ref(ref(int)) a ; (New(a, v) ; (Print(v) ; Print(a)))))
Symbol table: 
Output list: 
File table:
Heap table:

ID: 5
Execution stack: 
(New(v, 20) ; (ref(ref(int)) a ; (New(a, v) ; (Print(v) ; Print(a)))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap table:

ID: 5
Execution stack: 
(New(v, 20) ; (ref(ref(int)) a ; (New(a, v) ; (Print(v) ; Print(a)))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap table:

ID: 5
Execution stack: 
New(v, 20)
(ref(ref(int)) a ; (New(a, v) ; (Print(v) ; Print(a))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap table:

ID: 5
Execution stack: 
New(v, 20)
(ref(ref(int)) a ; (New(a, v) ; (Print(v) ; Print(a))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap table:

ID: 5
Execution stack: 
(ref(ref(int)) a ; (New(a, v) ; (Print(v) ; Print(a))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20

ID: 5
Execution stack: 
(ref(ref(int)) a ; (New(a, v) ; (Print(v) ; Print(a))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20

ID: 5
Execution stack: 
ref(ref(int)) a
(New(a, v) ; (Print(v) ; Print(a)))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20

ID: 5
Execution stack: 
ref(ref(int)) a
(New(a, v) ; (Print(v) ; Print(a)))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20

ID: 5
Execution stack: 
(New(a, v) ; (Print(v) ; Print(a)))
Symbol table: 
a -> (0, ref(int))
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20

ID: 5
Execution stack: 
(New(a, v) ; (Print(v) ; Print(a)))
Symbol table: 
a -> (0, ref(int))
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20

ID: 5
Execution stack: 
New(a, v)
(Print(v) ; Print(a))
Symbol table: 
a -> (0, ref(int))
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20

ID: 5
Execution stack: 
New(a, v)
(Print(v) ; Print(a))
Symbol table: 
a -> (0, ref(int))
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20

ID: 5
Execution stack: 
(Print(v) ; Print(a))
Symbol table: 
a -> (2, ref(int))
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20
2 -> (1, int)

ID: 5
Execution stack: 
(Print(v) ; Print(a))
Symbol table: 
a -> (2, ref(int))
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20
2 -> (1, int)

ID: 5
Execution stack: 
Print(v)
Print(a)
Symbol table: 
a -> (2, ref(int))
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20
2 -> (1, int)

ID: 5
Execution stack: 
Print(v)
Print(a)
Symbol table: 
a -> (2, ref(int))
v -> (1, int)
Output list: 
File table:
Heap table:
1 -> 20
2 -> (1, int)

ID: 5
Execution stack: 
Print(a)
Symbol table: 
a -> (2, ref(int))
v -> (1, int)
Output list: 
(1, int)
File table:
Heap table:
1 -> 20
2 -> (1, int)

ID: 5
Execution stack: 
Print(a)
Symbol table: 
a -> (2, ref(int))
v -> (1, int)
Output list: 
(1, int)
File table:
Heap table:
1 -> 20
2 -> (1, int)

ID: 5
Execution stack: 
Symbol table: 
a -> (2, ref(int))
v -> (1, int)
Output list: 
(1, int)
(2, ref(int))
File table:
Heap table:
1 -> 20
2 -> (1, int)

